//Magic bolt that varies with size by the energy put into it
{
	const SOUND_SHOOT ambience/alienflyby1.wav
	const SOUND_ZAP debris/zap1.wav

	const CLFX_ARROW_SCRIPT items/proj_mana2_cl
}

{ game_spawn

	name a|Manabolt
	desc Manabolt
	width 1
	height 1
	setbbox npcsize
	weight 	0
	gravity	0
	setmonsterclip 0
	invincible 1
	race beloved
	
	setmodel null.mdl
	
	setprop ent_me movetype 11
	setprop ent_me friction 1
	setprop ent_me solid 0
	
	callevent 10.0 fx_remove
}

{ game_dynamically_created //<owner> <vec> <ballSize> <damage> <skill to level>

	setvard FX_OWNER PARAM1
	local L_VEC PARAM2
	setvard FX_SIZE PARAM3
	setvard FX_DAMAGE PARAM4
	setvard FX_SKILL PARAM5
	
	setvard SCAN_SIZE $func(func_get_scan_size)

	setvelocity ent_me L_VEC
	svplaysound 4 4 SOUND_SHOOT

	setvard PREV_SCAN $get(ent_me,origin)
	callevent 0.3 scan_cycle

	callevent create_clfx
}

{ create_clfx
	//these have to be assembled and sent, as there's no actual model for client to grab info from
	if ( !CLFX_ARROW_INIT )
	{
		setvard CLFX_ARROW_INIT 1
		setvard CLFX_ARROW_IN_FLIGHT 1

		clientevent new all CLFX_ARROW_SCRIPT $get(ent_me,origin) $get(ent_me,angles) $get(ent_me,velocity) FX_SIZE //origin angle velocity ballSize
		setvard CLFX_ARROW_IDX game.script.last_sent_id
	}
}

{ scan_cycle

	local L_ORIGIN $get(ent_me,origin) 
	if ( PREV_SCAN isnot L_ORIGIN ) //The projectile has moved
	{
		setvard PREV_SCAN L_ORIGIN
		//<target|(src_origin)> <range|aoe|(dest_origin)|direct> <damage> <cth|fall_off> <attacker> <inflciter> <skill|none> <dmg_type> [flag_string]
		xdodamage L_ORIGIN SCAN_SIZE FX_DAMAGE 0 FX_OWNER ent_me FX_SKILL magic dmgevent:*ball
		callevent 0.3 scan_cycle
	}
	else
	{
		callevent remove_projectile
	}
}

{ ball_dodamage //PARAM1=hit:0|1 PARAM2=ent_hit PARAM3=(start) PARAM4=(end) PARAM5=DmgType PARAM6=DmgAmt
	
	if PARAM1
	if PARAM6 > 0

	subtract FX_SIZE 1
	if ( FX_SIZE > 0 )
	{
		setvard SCAN_SIZE $func(func_get_scan_size)
		
		clientevent update all CLFX_ARROW_IDX reduce_size //huevito
	}
	else callevent remove_projectile
}

{ remove_projectile 

	svsound.play3d SOUND_ZAP 10 PREV_SCAN 0 4
	clientevent update all CLFX_ARROW_IDX end_fx
	deleteme
}

{ fake_precache

	svplaysound 4 0 SOUND_ZAP
}

{ func_get_scan_size

	local L_SCAN_SIZE 24
	multiply L_SCAN_SIZE FX_SIZE
	capvar L_SCAN_SIZE 55 140
	return **clear
	return L_SCAN_SIZE
}